name: Build
on: [push]

# TODO - job for frontend deploy
# TODO - deploy only on master
# TODO - job for Run scraper
# TODO - cron schedule for scraper on master
# TODO - refactor common bits?
# TODO - ensure new commit cancels active runs

jobs:

  test_backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 13.0.1

      - name: Create file for service key
        run: echo "${{ secrets.GCLOUD_SERVICE_KEY }}" > "${GITHUB_WORKSPACE}/service-key.json"
        shell: bash

      - name: Cache (Gradle wrapper)
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: v1-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache (Gradle caches)
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: v1-gradle-caches-{{ hashFiles('build.gradle.kts') }}
          restore-keys: v1-gradle-caches-

      - name: Run tests
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="${GITHUB_WORKSPACE}/service-key.json"
          ./gradlew --no-daemon check

      - name: Capture test results
        uses: actions/upload-artifact@v1
        with:
          name: test-results
          path: build/test-results/test

  build_frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.4.0

      - name: Cache (Yarn cache)
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: v1-yarn-{{ hashFiles('frontend/yarn.lock') }}
          restore-keys: v1-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Capture build output
        uses: actions/upload-artifact@v1
        with:
          name: frontend-build
          path: frontend/out

  deploy_frontend:
    needs: build_frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Obtain SSH key
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Download build output
        uses: actions/download-artifact@v1
        with:
          name: frontend-build

      - name: Deploy
        run: ./scripts/deploy.sh
