version: 2

jobs:
  test_backend:
    environment:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Run tests
          command: ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
          when: always

  build_and_deploy_frontend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-yarn-{{ .Branch }}-{{ checksum "frontend/yarn.lock" }}
            - v1-yarn-{{ .Branch }}-
            - v1-yarn-
      - run:
          name: Install dependencies
          command: yarn install
          woring_directory: frontend/
      - run:
          name: Build frontend
          command: yarn build
          working_directory: frontend/
      - add_ssh_keys:
          fingerprints:
            - b2:01:83:8d:4e:e6:72:11:5f:57:70:11:ec:57:29:42
      # CircleCI workflow configuration is a disaster, so do branch check manually
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./scripts/deploy.sh
            else
              echo "Not deploying from '${CIRCLE_BRANCH}' branch"
            fi
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: v1-yarn-{{ .Branch }}-{{ checksum "frontend/yarn.lock" }}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test_backend
      - build_and_deploy_frontend
